# -*- coding: utf-8 -*-
"""Gold_price_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZJcwIohXCIcSTyElw4-u9ou6EOvLThdh
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics

"""Data Collection and Processing"""

#loading the csv data
gold_data = pd.read_csv('gld_price_data.csv')

gold_data.head(5)

gold_data.tail(5)

gold_data.shape
gold_data.info()

#getting statics of data

gold_data.describe()

"""Correlation:
1.Positive Correlation
2.Negative Correlation
"""

gold_data['Date'] = pd.to_datetime(gold_data['Date'])
Correlation = gold_data.corr()

#constructing a heat map
plt.figure(figsize=(8,8))
sns.heatmap(Correlation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')

#Correlation values of GLD
print(Correlation['GLD'])

#checking the distribution of GLD Prices
sns.distplot(gold_data['GLD'], color='Blue')

"""Splitting the Feautres and target"""

X = gold_data.drop(['Date', 'GLD'], axis=1)
Y = gold_data['GLD']

print(X)

print(Y)

"""Splitting into Training and Test data

"""

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=2)

"""Random Forest Regressor"""

regressor = RandomForestRegressor(n_estimators=100)

#training the model
regressor.fit(X_train,Y_train)

"""Model Evaluation"""

#prediction on test data
pred = regressor.predict(X_test)
print(pred)

# R squared error
error_score = metrics.r2_score(Y_test, pred)
print("R squred error : ", error_score)

"""Compare the Actual values and predicted values in a Plot"""

Y_test = list(Y_test)

plt.plot(Y_test, color='Blue', label='Actual value')
plt.plot(pred, color='Green', label='predicted value')

plt.title('Actual Price vs Predicted price')
plt.xlabel('Number of values')
plt.ylabel('GLD Price')

plt.legend()

plt.show()